# -*- coding: utf-8 -*-
"""Neural Nets - Pretrained  Image Classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ACTiqgRKkRXdrF77e7OHwfVmJX-FGZoC

# **Imports**
"""

import numpy as np
import tensorflow as ts
import keras

from keras.preprocessing.image import img_to_array, load_img
from keras.applications.inception_resnet_v2 import InceptionResNetV2, decode_predictions,  preprocess_input
from keras.applications.vgg19 import VGG19
from keras.applications.vgg19 import preprocess_input as preprocess_input_vgg19
from keras.applications.vgg19 import decode_predictions as decode_predictions_vgg19

from IPython.core.display import display

"""## **Constant**"""

FILE_1 = '01 Umbrella.jpg'
FILE_2 = '02 Couple.jpg'
FILE_3 = '03 Ocean.jpg'

FILE_1

# default size of thims model (299, 299)
# change resoluation
pic = load_img(FILE_1, target_size=(299, 299))

"""## **Preprocessing Images**"""

pic

#convert image to array
pic_array = img_to_array(pic)
pic_array.shape

"""function load image in default resoluation InceptionRestNetV2. covert the image to an array and return to preprocessed image forr the InceptionRestNetV2 model."""

# InceptionResNetV2 model expected shape (299, 299, 3)
def format_img_inceptionrestnet(filename):
  pic = load_img(filename, target_size=(299,299))
  pic_array = img_to_array(pic)
  expanded = np.expand_dims(pic_array, axis=0)
  return preprocess_input(expanded)

# VGG19 model expected shape (224, 224, 3)
def format_img_vgg_19(filename):
  pic = load_img(filename, target_size=(224,224))
  pic_array = img_to_array(pic)
  expanded = np.expand_dims(pic_array, axis=0)
  return preprocess_input_vgg19(expanded)

"""## **Load InceptionRestNet**"""

# Commented out IPython magic to ensure Python compatibility.
# %%time
# inception_model = InceptionResNetV2(weights='imagenet')

# model graph using tensorflow
inception_model.graph = ts.get_default_graph()

"""# Making Predictions"""

# expected input_1 to have 4 dimensions, but got array with shape (256, 256, 3)
# make 4 dimensions using numpy array
expanded =  np.expand_dims(pic_array, axis=0)
expanded.shape

# preprocess image to correct prediction
preprocessed = preprocess_input(expanded)

prediction = inception_model.predict(preprocessed)

# decode prediction 
decode_predictions(prediction)

data = format_img_inceptionrestnet(FILE_2)

prediction = inception_model.predict(data)
decode_predictions(prediction)

# not correct prediction to couple image
display(load_img(FILE_2))

"""# Testing the VGG19 Model (Visual geomentry group)"""

vgg_19_model = VGG19(weights='imagenet')

display(load_img(FILE_3))



data = format_img_vgg_19('06 Feet.jpg')
prediction = vgg_19_model.predict(data)
decode_predictions_vgg19(prediction)

display(load_img('06 Feet.jpg'))

data = format_img_inceptionrestnet('06 Feet.jpg')
prediction = inception_model.predict(data)
decode_predictions(prediction)

display(load_img('06 Feet.jpg'))

